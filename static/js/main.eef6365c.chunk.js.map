{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","noComment","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"6z8IAAaA,EAAc,SAAC,GAAD,QAAGC,QAC5BC,EADyB,EACzBA,KACAC,EAFyB,EAEzBA,MACAC,EAHyB,EAGzBA,KAHyB,OAKzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCjBMG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCJrCC,G,MAAW,SAAC,GAAD,QAAGC,KACzBV,EADsB,EACtBA,KACAC,EAFsB,EAEtBA,MAFsB,OAItB,mBACEE,UAAU,WACVC,KAAI,iBAAYH,GAFlB,SAIGD,MCNQW,G,MAAW,SAAC,GAKhB,IAAD,IALmBC,KACzBC,EAIM,EAJNA,MACAX,EAGM,EAHNA,KACAQ,EAEM,EAFNA,KACAJ,EACM,EADNA,SAEMQ,EACJ,qCACE,uBACA,mBAAG,UAAQ,oBAAX,gCAIJ,OACE,sBAAKX,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eACD,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAEFI,EAASS,OACN,cAAC,EAAD,CAAaT,SAAUA,IACvBQ,OCjCGE,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAMV,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,U,qBCWtC,IAAMS,EAAQC,EAAgBX,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MAXmBS,EAWDP,EAAKO,OAVhBC,EAAgBC,MAAK,SAAAX,GAAI,OAAIA,EAAKF,KAAOW,MACzC,MAUPb,UAPuBgB,EAOGV,EAAKJ,GANxBe,EAAmBC,QAAO,SAAAzB,GAAO,OAAIA,EAAQuB,SAAWA,QADjE,IAAyBA,EALJH,KAeRM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUc,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eef6365c.chunk.js","sourcesContent":["export const CommentInfo = ({ comment: {\n  name,\n  email,\n  body,\n} }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: {\n  name,\n  email,\n} }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${email}`}\n  >\n    {name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post: {\n  title,\n  body,\n  user,\n  comments,\n} }) => {\n  const noComment = (\n    <>\n      <hr />\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    </>\n  );\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n      {comments.length\n        ? <CommentList comments={comments} />\n        : noComment }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}